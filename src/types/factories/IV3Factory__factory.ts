/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IV3Factory, IV3FactoryInterface } from "../IV3Factory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
      {
        internalType: "address",
        name: "datatokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "publisherAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "burnInEndBlock",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "ssParams",
        type: "uint256[]",
      },
    ],
    name: "newBPool",
    outputs: [
      {
        internalType: "address",
        name: "bpool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IV3Factory__factory {
  static readonly abi = _abi;
  static createInterface(): IV3FactoryInterface {
    return new utils.Interface(_abi) as IV3FactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IV3Factory {
    return new Contract(address, _abi, signerOrProvider) as IV3Factory;
  }
}
