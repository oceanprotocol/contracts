/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BTokenBase, BTokenBaseInterface } from "../BTokenBase";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BONE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BPOW_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "EXIT_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INIT_POOL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_BOUND_TOKENS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_BPOW_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_IN_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_OUT_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_TOTAL_WEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_WEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_BALANCE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_BOUND_TOKENS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_BPOW_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_WEIGHT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610311806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b7b800a411610097578063c36596a611610066578063c36596a614610127578063c6580d1214610176578063e4a28a5214610105578063ec0930211461017e57600080fd5b8063b7b800a414610156578063ba019dab1461015e578063bc063e1a14610166578063bc694ea21461016e57600080fd5b8063867378c5116100d3578063867378c51461013e5780639381cd2b14610146578063992e2a921461014e578063b0e0d1361461015657600080fd5b806309a3bbe414610105578063189d00ca1461011f578063218b53821461012757806376c7a3c714610136575b600080fd5b61010d610186565b60405190815260200160405180910390f35b61010d61019c565b61010d670de0b6b3a764000081565b61010d6101b3565b61010d6101c8565b61010d6101df565b61010d6101f2565b61010d600281565b61010d600181565b61010d610210565b61010d610223565b61010d600081565b61010d610242565b610199670de0b6b3a7640000603261026b565b81565b6101996402540be400670de0b6b3a764000061028a565b610199620f4240670de0b6b3a764000061028a565b61019964e8d4a51000670de0b6b3a764000061028a565b610199670de0b6b3a7640000606461026b565b6102056003670de0b6b3a764000061028a565b6101999060016102ac565b610199600a670de0b6b3a764000061028a565b6001610238670de0b6b3a7640000600261026b565b61019991906102c4565b6101996002670de0b6b3a764000061028a565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561028557610285610255565b500290565b6000826102a757634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156102bf576102bf610255565b500190565b6000828210156102d6576102d6610255565b50039056fea26469706673582212203e809f36d2371cf9d6bdb96c22681ccd0516367a89dbfc95624f4b458f506e9064736f6c634300080a0033";

type BTokenBaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BTokenBaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BTokenBase__factory extends ContractFactory {
  constructor(...args: BTokenBaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BTokenBase";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BTokenBase> {
    return super.deploy(overrides || {}) as Promise<BTokenBase>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BTokenBase {
    return super.attach(address) as BTokenBase;
  }
  connect(signer: Signer): BTokenBase__factory {
    return super.connect(signer) as BTokenBase__factory;
  }
  static readonly contractName: "BTokenBase";
  public readonly contractName: "BTokenBase";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BTokenBaseInterface {
    return new utils.Interface(_abi) as BTokenBaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BTokenBase {
    return new Contract(address, _abi, signerOrProvider) as BTokenBase;
  }
}
