/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BaseContract, BigNumber, BigNumberish, Signer, utils } from "ethers";
import { EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IERC725XInterface extends utils.Interface {
  contractName: "IERC725X";
  functions: {};

  events: {
    "ContractCreated(address)": EventFragment;
    "Executed(uint256,address,uint256,bytes)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ContractCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Executed"): EventFragment;
}

export type ContractCreatedEvent = TypedEvent<
  [string],
  { contractAddress: string }
>;

export type ContractCreatedEventFilter = TypedEventFilter<ContractCreatedEvent>;

export type ExecutedEvent = TypedEvent<
  [BigNumber, string, BigNumber, string],
  { _operation: BigNumber; _to: string; _value: BigNumber; _data: string }
>;

export type ExecutedEventFilter = TypedEventFilter<ExecutedEvent>;

export interface IERC725X extends BaseContract {
  contractName: "IERC725X";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IERC725XInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "ContractCreated(address)"(
      contractAddress?: string | null
    ): ContractCreatedEventFilter;
    ContractCreated(
      contractAddress?: string | null
    ): ContractCreatedEventFilter;

    "Executed(uint256,address,uint256,bytes)"(
      _operation?: BigNumberish | null,
      _to?: string | null,
      _value?: BigNumberish | null,
      _data?: null
    ): ExecutedEventFilter;
    Executed(
      _operation?: BigNumberish | null,
      _to?: string | null,
      _value?: BigNumberish | null,
      _data?: null
    ): ExecutedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
