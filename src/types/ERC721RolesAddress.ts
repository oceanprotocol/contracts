/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export declare namespace ERC721RolesAddress {
  export type RolesStruct = {
    manager: boolean;
    deployERC20: boolean;
    updateMetadata: boolean;
    store: boolean;
  };

  export type RolesStructOutput = [boolean, boolean, boolean, boolean] & {
    manager: boolean;
    deployERC20: boolean;
    updateMetadata: boolean;
    store: boolean;
  };
}

export interface ERC721RolesAddressInterface extends utils.Interface {
  contractName: "ERC721RolesAddress";
  functions: {
    "addTo725StoreList(address)": FunctionFragment;
    "addToCreateERC20List(address)": FunctionFragment;
    "addToMetadataList(address)": FunctionFragment;
    "auth(uint256)": FunctionFragment;
    "getPermissions(address)": FunctionFragment;
    "removeFrom725StoreList(address)": FunctionFragment;
    "removeFromCreateERC20List(address)": FunctionFragment;
    "removeFromMetadataList(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addTo725StoreList",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addToCreateERC20List",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "addToMetadataList",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "auth", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "getPermissions",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeFrom725StoreList",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeFromCreateERC20List",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "removeFromMetadataList",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "addTo725StoreList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addToCreateERC20List",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addToMetadataList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "auth", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPermissions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeFrom725StoreList",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeFromCreateERC20List",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeFromMetadataList",
    data: BytesLike
  ): Result;

  events: {
    "AddedManager(address,address,uint256,uint256)": EventFragment;
    "AddedTo725StoreList(address,address,uint256,uint256)": EventFragment;
    "AddedToCreateERC20List(address,address,uint256,uint256)": EventFragment;
    "AddedToMetadataList(address,address,uint256,uint256)": EventFragment;
    "CleanedPermissions(address,uint256,uint256)": EventFragment;
    "RemovedFrom725StoreList(address,address,uint256,uint256)": EventFragment;
    "RemovedFromCreateERC20List(address,address,uint256,uint256)": EventFragment;
    "RemovedFromMetadataList(address,address,uint256,uint256)": EventFragment;
    "RemovedManager(address,address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AddedManager"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddedTo725StoreList"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddedToCreateERC20List"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddedToMetadataList"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CleanedPermissions"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemovedFrom725StoreList"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemovedFromCreateERC20List"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemovedFromMetadataList"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemovedManager"): EventFragment;
}

export type AddedManagerEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  { user: string; signer: string; timestamp: BigNumber; blockNumber: BigNumber }
>;

export type AddedManagerEventFilter = TypedEventFilter<AddedManagerEvent>;

export type AddedTo725StoreListEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  { user: string; signer: string; timestamp: BigNumber; blockNumber: BigNumber }
>;

export type AddedTo725StoreListEventFilter =
  TypedEventFilter<AddedTo725StoreListEvent>;

export type AddedToCreateERC20ListEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  { user: string; signer: string; timestamp: BigNumber; blockNumber: BigNumber }
>;

export type AddedToCreateERC20ListEventFilter =
  TypedEventFilter<AddedToCreateERC20ListEvent>;

export type AddedToMetadataListEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  { user: string; signer: string; timestamp: BigNumber; blockNumber: BigNumber }
>;

export type AddedToMetadataListEventFilter =
  TypedEventFilter<AddedToMetadataListEvent>;

export type CleanedPermissionsEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  { signer: string; timestamp: BigNumber; blockNumber: BigNumber }
>;

export type CleanedPermissionsEventFilter =
  TypedEventFilter<CleanedPermissionsEvent>;

export type RemovedFrom725StoreListEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  { user: string; signer: string; timestamp: BigNumber; blockNumber: BigNumber }
>;

export type RemovedFrom725StoreListEventFilter =
  TypedEventFilter<RemovedFrom725StoreListEvent>;

export type RemovedFromCreateERC20ListEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  { user: string; signer: string; timestamp: BigNumber; blockNumber: BigNumber }
>;

export type RemovedFromCreateERC20ListEventFilter =
  TypedEventFilter<RemovedFromCreateERC20ListEvent>;

export type RemovedFromMetadataListEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  { user: string; signer: string; timestamp: BigNumber; blockNumber: BigNumber }
>;

export type RemovedFromMetadataListEventFilter =
  TypedEventFilter<RemovedFromMetadataListEvent>;

export type RemovedManagerEvent = TypedEvent<
  [string, string, BigNumber, BigNumber],
  { user: string; signer: string; timestamp: BigNumber; blockNumber: BigNumber }
>;

export type RemovedManagerEventFilter = TypedEventFilter<RemovedManagerEvent>;

export interface ERC721RolesAddress extends BaseContract {
  contractName: "ERC721RolesAddress";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ERC721RolesAddressInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addTo725StoreList(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addToCreateERC20List(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    addToMetadataList(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    auth(arg0: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    getPermissions(
      user: string,
      overrides?: CallOverrides
    ): Promise<[ERC721RolesAddress.RolesStructOutput]>;

    removeFrom725StoreList(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeFromCreateERC20List(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeFromMetadataList(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  addTo725StoreList(
    _allowedAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addToCreateERC20List(
    _allowedAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  addToMetadataList(
    _allowedAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  auth(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  getPermissions(
    user: string,
    overrides?: CallOverrides
  ): Promise<ERC721RolesAddress.RolesStructOutput>;

  removeFrom725StoreList(
    _allowedAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeFromCreateERC20List(
    _allowedAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeFromMetadataList(
    _allowedAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addTo725StoreList(
      _allowedAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addToCreateERC20List(
      _allowedAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    addToMetadataList(
      _allowedAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    auth(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    getPermissions(
      user: string,
      overrides?: CallOverrides
    ): Promise<ERC721RolesAddress.RolesStructOutput>;

    removeFrom725StoreList(
      _allowedAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeFromCreateERC20List(
      _allowedAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;

    removeFromMetadataList(
      _allowedAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "AddedManager(address,address,uint256,uint256)"(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): AddedManagerEventFilter;
    AddedManager(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): AddedManagerEventFilter;

    "AddedTo725StoreList(address,address,uint256,uint256)"(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): AddedTo725StoreListEventFilter;
    AddedTo725StoreList(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): AddedTo725StoreListEventFilter;

    "AddedToCreateERC20List(address,address,uint256,uint256)"(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): AddedToCreateERC20ListEventFilter;
    AddedToCreateERC20List(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): AddedToCreateERC20ListEventFilter;

    "AddedToMetadataList(address,address,uint256,uint256)"(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): AddedToMetadataListEventFilter;
    AddedToMetadataList(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): AddedToMetadataListEventFilter;

    "CleanedPermissions(address,uint256,uint256)"(
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): CleanedPermissionsEventFilter;
    CleanedPermissions(
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): CleanedPermissionsEventFilter;

    "RemovedFrom725StoreList(address,address,uint256,uint256)"(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): RemovedFrom725StoreListEventFilter;
    RemovedFrom725StoreList(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): RemovedFrom725StoreListEventFilter;

    "RemovedFromCreateERC20List(address,address,uint256,uint256)"(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): RemovedFromCreateERC20ListEventFilter;
    RemovedFromCreateERC20List(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): RemovedFromCreateERC20ListEventFilter;

    "RemovedFromMetadataList(address,address,uint256,uint256)"(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): RemovedFromMetadataListEventFilter;
    RemovedFromMetadataList(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): RemovedFromMetadataListEventFilter;

    "RemovedManager(address,address,uint256,uint256)"(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): RemovedManagerEventFilter;
    RemovedManager(
      user?: string | null,
      signer?: string | null,
      timestamp?: null,
      blockNumber?: null
    ): RemovedManagerEventFilter;
  };

  estimateGas: {
    addTo725StoreList(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addToCreateERC20List(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    addToMetadataList(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    auth(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    getPermissions(user: string, overrides?: CallOverrides): Promise<BigNumber>;

    removeFrom725StoreList(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeFromCreateERC20List(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeFromMetadataList(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addTo725StoreList(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addToCreateERC20List(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    addToMetadataList(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    auth(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPermissions(
      user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeFrom725StoreList(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeFromCreateERC20List(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeFromMetadataList(
      _allowedAddress: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
