/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC165Storage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Storage__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "OPFCommunityFeeCollector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OPFCommunityFeeCollector__factory>;
    getContractFactory(
      name: "ERC721Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Factory__factory>;
    getContractFactory(
      name: "IDispenser",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDispenser__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Template",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Template__factory>;
    getContractFactory(
      name: "IERC721Template",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Template__factory>;
    getContractFactory(
      name: "IERC725X",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC725X__factory>;
    getContractFactory(
      name: "IERC725Y",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC725Y__factory>;
    getContractFactory(
      name: "IFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFactory__factory>;
    getContractFactory(
      name: "IFactoryRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFactoryRouter__factory>;
    getContractFactory(
      name: "IFixedRateExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFixedRateExchange__factory>;
    getContractFactory(
      name: "IPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPool__factory>;
    getContractFactory(
      name: "ISideStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISideStaking__factory>;
    getContractFactory(
      name: "IV3ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV3ERC20__factory>;
    getContractFactory(
      name: "IV3Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV3Factory__factory>;
    getContractFactory(
      name: "BConst",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BConst__factory>;
    getContractFactory(
      name: "BFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BFactory__factory>;
    getContractFactory(
      name: "BMath",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BMath__factory>;
    getContractFactory(
      name: "BNum",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BNum__factory>;
    getContractFactory(
      name: "BPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BPool__factory>;
    getContractFactory(
      name: "BToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BToken__factory>;
    getContractFactory(
      name: "BTokenBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BTokenBase__factory>;
    getContractFactory(
      name: "Dispenser",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Dispenser__factory>;
    getContractFactory(
      name: "FactoryRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FactoryRouter__factory>;
    getContractFactory(
      name: "FixedRateExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FixedRateExchange__factory>;
    getContractFactory(
      name: "SideStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SideStaking__factory>;
    getContractFactory(
      name: "ERC20Template",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Template__factory>;
    getContractFactory(
      name: "ERC20TemplateEnterprise",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20TemplateEnterprise__factory>;
    getContractFactory(
      name: "ERC721Template",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Template__factory>;
    getContractFactory(
      name: "Deployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Deployer__factory>;
    getContractFactory(
      name: "ERC20Roles",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Roles__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721RolesAddress",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721RolesAddress__factory>;
    getContractFactory(
      name: "ERC725Ocean",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC725Ocean__factory>;
    getContractFactory(
      name: "MockERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC20__factory>;
    getContractFactory(
      name: "MockERC20Decimals",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC20Decimals__factory>;
    getContractFactory(
      name: "MockExchange",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockExchange__factory>;
    getContractFactory(
      name: "MockOcean",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockOcean__factory>;
    getContractFactory(
      name: "MockOldDT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockOldDT__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IDataTokenTemplate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDataTokenTemplate__factory>;
    getContractFactory(
      name: "V3DataTokenTemplate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V3DataTokenTemplate__factory>;
    getContractFactory(
      name: "V3DTFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V3DTFactory__factory>;
    getContractFactory(
      name: "V3Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V3Metadata__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC165Storage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Storage>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "OPFCommunityFeeCollector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OPFCommunityFeeCollector>;
    getContractAt(
      name: "ERC721Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Factory>;
    getContractAt(
      name: "IDispenser",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDispenser>;
    getContractAt(
      name: "IERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Template",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Template>;
    getContractAt(
      name: "IERC721Template",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Template>;
    getContractAt(
      name: "IERC725X",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC725X>;
    getContractAt(
      name: "IERC725Y",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC725Y>;
    getContractAt(
      name: "IFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFactory>;
    getContractAt(
      name: "IFactoryRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFactoryRouter>;
    getContractAt(
      name: "IFixedRateExchange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFixedRateExchange>;
    getContractAt(
      name: "IPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPool>;
    getContractAt(
      name: "ISideStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISideStaking>;
    getContractAt(
      name: "IV3ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV3ERC20>;
    getContractAt(
      name: "IV3Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV3Factory>;
    getContractAt(
      name: "BConst",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BConst>;
    getContractAt(
      name: "BFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BFactory>;
    getContractAt(
      name: "BMath",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BMath>;
    getContractAt(
      name: "BNum",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BNum>;
    getContractAt(
      name: "BPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BPool>;
    getContractAt(
      name: "BToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BToken>;
    getContractAt(
      name: "BTokenBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BTokenBase>;
    getContractAt(
      name: "Dispenser",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Dispenser>;
    getContractAt(
      name: "FactoryRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FactoryRouter>;
    getContractAt(
      name: "FixedRateExchange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FixedRateExchange>;
    getContractAt(
      name: "SideStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SideStaking>;
    getContractAt(
      name: "ERC20Template",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Template>;
    getContractAt(
      name: "ERC20TemplateEnterprise",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20TemplateEnterprise>;
    getContractAt(
      name: "ERC721Template",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Template>;
    getContractAt(
      name: "Deployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Deployer>;
    getContractAt(
      name: "ERC20Roles",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Roles>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC721RolesAddress",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721RolesAddress>;
    getContractAt(
      name: "ERC725Ocean",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC725Ocean>;
    getContractAt(
      name: "MockERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC20>;
    getContractAt(
      name: "MockERC20Decimals",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC20Decimals>;
    getContractAt(
      name: "MockExchange",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockExchange>;
    getContractAt(
      name: "MockOcean",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockOcean>;
    getContractAt(
      name: "MockOldDT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockOldDT>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IDataTokenTemplate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDataTokenTemplate>;
    getContractAt(
      name: "V3DataTokenTemplate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V3DataTokenTemplate>;
    getContractAt(
      name: "V3DTFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V3DTFactory>;
    getContractAt(
      name: "V3Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V3Metadata>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
