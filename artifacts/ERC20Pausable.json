{
  "contractName": "ERC20Pausable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC20Pausable adds the ability to pause ERC20 compliant template      used by the ERC20Template contract for pausing the contract.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"approve     Standard ERC20 approve function with onlyNotPaused modifier.     Can be called only if the contract is not paused.\",\"params\":{\"spender\":\"refers to an address that is allowed to spend tokens.\",\"value\":\"refers to amount of tokens that could be spent.\"},\"return\":\"true if approval is success, false otherwise.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"decreaseAllowance     Standard ERC20 decreaseAllowance function with onlyNotPaused modifier.     Can be called only if the contract is not paused.\",\"params\":{\"spender\":\"refers to an address that is allowed to spend tokens.\",\"subtractedValue\":\"refers to an subtracted amount of tokens that could be spent.\"},\"return\":\"true if allowance is decreased successfully, false otherwise.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"increaseAllowance     Standard ERC20 increaseAllowance function with onlyNotPaused modifier.     Can be called only if the contract is not paused.\",\"params\":{\"addedValue\":\"refers to an added amount of tokens that could be spent.\",\"spender\":\"refers to an address that is allowed to spend tokens.\"},\"return\":\"true if allowance is increased successfully, false otherwise.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"transfer     Standard ERC20 transfer function with onlyNotPaused modifier.     Can be called only if the contract is not paused.\",\"params\":{\"to\":\"refers to an address that tokens are tranfered to.\",\"value\":\"refers to amount of tokens being tranfered.\"},\"return\":\"true if transfer is success, false otherwise.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"transfer     Standard ERC20 transferFrom function with onlyNotPaused modifier.     Can be called only if the contract is not paused.\",\"params\":{\"from\":\"refers to an address that tokens are tranfered from.\",\"to\":\"refers to an address that tokens are tranfered to.\",\"value\":\"refers to amount of tokens being tranfered.\"},\"return\":\"true if transfer is success, false otherwise.\"}},\"title\":\"ERC20Pausable \"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/ahmedali/Desktop/work/ocean-contracts/contracts/templates/token/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ahmedali/Desktop/work/ocean-contracts/contracts/templates/token/ERC20Pausable.sol\":{\"keccak256\":\"0x70539d62cb1c1190e4a8e994eb8cf7ba73a0c1e5b7ff99611befbddf27e76b0c\",\"urls\":[\"bzzr://07e91a46770dfc5c6f29d00d48f602e103341b628a38b7b2fc66f7bd26c7878f\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzzr://6200c125af376381ae6c5415b8f3c1cb83889be20a7a51d67ac607487a10313b\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\"]}},\"version\":1}",
  "bytecode": "0x60806040526003805460ff19169055610a308061001d6000396000f3fe608060405234801561001057600080fd5b50600436106100a5576000357c01000000000000000000000000000000000000000000000000000000009004806370a082311161007857806370a0823114610166578063a457c2d71461018c578063a9059cbb146101b8578063dd62ed3e146101e4576100a5565b8063095ea7b3146100aa57806318160ddd146100ea57806323b872dd14610104578063395093511461013a575b600080fd5b6100d6600480360360408110156100c057600080fd5b50600160a060020a038135169060200135610212565b604080519115158252519081900360200190f35b6100f261026b565b60408051918252519081900360200190f35b6100d66004803603606081101561011a57600080fd5b50600160a060020a03813581169160208101359091169060400135610271565b6100d66004803603604081101561015057600080fd5b50600160a060020a0381351690602001356102cc565b6100f26004803603602081101561017c57600080fd5b5035600160a060020a031661031e565b6100d6600480360360408110156101a257600080fd5b50600160a060020a038135169060200135610339565b6100d6600480360360408110156101ce57600080fd5b50600160a060020a03813516906020013561038b565b6100f2600480360360408110156101fa57600080fd5b50600160a060020a03813581169160200135166103dd565b60035460009060ff161561025a5760405160e560020a62461bcd02815260040180806020018281038252602c8152602001806108fb602c913960400191505060405180910390fd5b6102648383610408565b9392505050565b60025490565b60035460009060ff16156102b95760405160e560020a62461bcd02815260040180806020018281038252602c8152602001806108fb602c913960400191505060405180910390fd5b6102c4848484610425565b949350505050565b60035460009060ff16156103145760405160e560020a62461bcd02815260040180806020018281038252602c8152602001806108fb602c913960400191505060405180910390fd5b61026483836104b2565b600160a060020a031660009081526020819052604090205490565b60035460009060ff16156103815760405160e560020a62461bcd02815260040180806020018281038252602c8152602001806108fb602c913960400191505060405180910390fd5b6102648383610506565b60035460009060ff16156103d35760405160e560020a62461bcd02815260040180806020018281038252602c8152602001806108fb602c913960400191505060405180910390fd5b6102648383610574565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600061041c610415610588565b848461058c565b50600192915050565b600061043284848461067e565b6104a88461043e610588565b6104a38560405180606001604052806028815260200161096f60289139600160a060020a038a1660009081526001602052604081209061047c610588565b600160a060020a03168152602081019190915260400160002054919063ffffffff6107e016565b61058c565b5060019392505050565b600061041c6104bf610588565b846104a385600160006104d0610588565b600160a060020a03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61087a16565b600061041c610513610588565b846104a3856040518060600160405280602581526020016109e0602591396001600061053d610588565b600160a060020a03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6107e016565b600061041c610581610588565b848461067e565b3390565b600160a060020a0383166105d45760405160e560020a62461bcd0281526004018080602001828103825260248152602001806109bc6024913960400191505060405180910390fd5b600160a060020a03821661061c5760405160e560020a62461bcd0281526004018080602001828103825260228152602001806109276022913960400191505060405180910390fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a0383166106c65760405160e560020a62461bcd0281526004018080602001828103825260258152602001806109976025913960400191505060405180910390fd5b600160a060020a03821661070e5760405160e560020a62461bcd0281526004018080602001828103825260238152602001806108d86023913960400191505060405180910390fd5b6107518160405180606001604052806026815260200161094960269139600160a060020a038616600090815260208190526040902054919063ffffffff6107e016565b600160a060020a038085166000908152602081905260408082209390935590841681522054610786908263ffffffff61087a16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108725760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561083757818101518382015260200161081f565b50505050905090810190601f1680156108645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610264576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fdfe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332305061757361626c653a207468697320746f6b656e20636f6e74726163742069732070617573656445524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa165627a7a723058208c7333dbeea6bd2fcb7f1b23b3ae58e954a2a2dd8b812bbdba932a4501924cc00029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a5576000357c01000000000000000000000000000000000000000000000000000000009004806370a082311161007857806370a0823114610166578063a457c2d71461018c578063a9059cbb146101b8578063dd62ed3e146101e4576100a5565b8063095ea7b3146100aa57806318160ddd146100ea57806323b872dd14610104578063395093511461013a575b600080fd5b6100d6600480360360408110156100c057600080fd5b50600160a060020a038135169060200135610212565b604080519115158252519081900360200190f35b6100f261026b565b60408051918252519081900360200190f35b6100d66004803603606081101561011a57600080fd5b50600160a060020a03813581169160208101359091169060400135610271565b6100d66004803603604081101561015057600080fd5b50600160a060020a0381351690602001356102cc565b6100f26004803603602081101561017c57600080fd5b5035600160a060020a031661031e565b6100d6600480360360408110156101a257600080fd5b50600160a060020a038135169060200135610339565b6100d6600480360360408110156101ce57600080fd5b50600160a060020a03813516906020013561038b565b6100f2600480360360408110156101fa57600080fd5b50600160a060020a03813581169160200135166103dd565b60035460009060ff161561025a5760405160e560020a62461bcd02815260040180806020018281038252602c8152602001806108fb602c913960400191505060405180910390fd5b6102648383610408565b9392505050565b60025490565b60035460009060ff16156102b95760405160e560020a62461bcd02815260040180806020018281038252602c8152602001806108fb602c913960400191505060405180910390fd5b6102c4848484610425565b949350505050565b60035460009060ff16156103145760405160e560020a62461bcd02815260040180806020018281038252602c8152602001806108fb602c913960400191505060405180910390fd5b61026483836104b2565b600160a060020a031660009081526020819052604090205490565b60035460009060ff16156103815760405160e560020a62461bcd02815260040180806020018281038252602c8152602001806108fb602c913960400191505060405180910390fd5b6102648383610506565b60035460009060ff16156103d35760405160e560020a62461bcd02815260040180806020018281038252602c8152602001806108fb602c913960400191505060405180910390fd5b6102648383610574565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b600061041c610415610588565b848461058c565b50600192915050565b600061043284848461067e565b6104a88461043e610588565b6104a38560405180606001604052806028815260200161096f60289139600160a060020a038a1660009081526001602052604081209061047c610588565b600160a060020a03168152602081019190915260400160002054919063ffffffff6107e016565b61058c565b5060019392505050565b600061041c6104bf610588565b846104a385600160006104d0610588565b600160a060020a03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61087a16565b600061041c610513610588565b846104a3856040518060600160405280602581526020016109e0602591396001600061053d610588565b600160a060020a03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6107e016565b600061041c610581610588565b848461067e565b3390565b600160a060020a0383166105d45760405160e560020a62461bcd0281526004018080602001828103825260248152602001806109bc6024913960400191505060405180910390fd5b600160a060020a03821661061c5760405160e560020a62461bcd0281526004018080602001828103825260228152602001806109276022913960400191505060405180910390fd5b600160a060020a03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600160a060020a0383166106c65760405160e560020a62461bcd0281526004018080602001828103825260258152602001806109976025913960400191505060405180910390fd5b600160a060020a03821661070e5760405160e560020a62461bcd0281526004018080602001828103825260238152602001806108d86023913960400191505060405180910390fd5b6107518160405180606001604052806026815260200161094960269139600160a060020a038616600090815260208190526040902054919063ffffffff6107e016565b600160a060020a038085166000908152602081905260408082209390935590841681522054610786908263ffffffff61087a16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108725760405160e560020a62461bcd0281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561083757818101518382015260200161081f565b50505050905090810190601f1680156108645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610264576040805160e560020a62461bcd02815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fdfe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332305061757361626c653a207468697320746f6b656e20636f6e74726163742069732070617573656445524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa165627a7a723058208c7333dbeea6bd2fcb7f1b23b3ae58e954a2a2dd8b812bbdba932a4501924cc00029",
  "sourceMap": "426:3522:13:-;;;465:28;;;-1:-1:-1;;465:28:13;;;426:3522;;;;;;",
  "deployedSourceMap": "426:3522:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;426:3522:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2423:193;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2423:193:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1559:89:18;;;:::i;:::-;;;;;;;;;;;;;;;;1819:222:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1819:222:13;;;;;;;;;;;;;;;;;:::i;3048:223::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3048:223:13;;;;;;;;:::i;1706:108:18:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1706:108:18;-1:-1:-1;;;;;1706:108:18;;:::i;3713:233:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3713:233:13;;;;;;;;:::i;1186:185::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1186:185:13;;;;;;;;:::i;2230:132:18:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2230:132:18;;;;;;;;;;:::i;2423:193:13:-;561:6;;2552:4;;561:6;;560:7;539:99;;;;-1:-1:-1;;;;;539:99:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2580:29;2594:7;2603:5;2580:13;:29::i;:::-;2573:36;2423:193;-1:-1:-1;;;2423:193:13:o;1559:89:18:-;1629:12;;1559:89;:::o;1819:222:13:-;561:6;;1971:4;;561:6;;560:7;539:99;;;;-1:-1:-1;;;;;539:99:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:35;2018:4;2024:2;2028:5;1999:18;:35::i;:::-;1992:42;1819:222;-1:-1:-1;;;;1819:222:13:o;3048:223::-;561:6;;3192:4;;561:6;;560:7;539:99;;;;-1:-1:-1;;;;;539:99:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3220:44;3244:7;3253:10;3220:23;:44::i;1706:108:18:-;-1:-1:-1;;;;;1789:18:18;1763:7;1789:18;;;;;;;;;;;;1706:108::o;3713:233:13:-;561:6;;3862:4;;561:6;;560:7;539:99;;;;-1:-1:-1;;;;;539:99:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3890:49;3914:7;3923:15;3890:23;:49::i;1186:185::-;561:6;;1311:4;;561:6;;560:7;539:99;;;;-1:-1:-1;;;;;539:99:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:25;1354:2;1358:5;1339:14;:25::i;2230:132:18:-;-1:-1:-1;;;;;2328:18:18;;;2302:7;2328:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2230:132::o;2500:149::-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;-1:-1:-1;2638:4:18;2500:149;;;;:::o;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3289:19:18;;;;;;:11;:19;;;;;;3309:12;:10;:12::i;:::-;-1:-1:-1;;;;;3289:33:18;;;;;;;;;;;;-1:-1:-1;3289:33:18;;;:89;;:37;:89;:::i;:::-;3258:8;:121::i;:::-;-1:-1:-1;3396:4:18;3107:300;;;;;:::o;3802:207::-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;-1:-1:-1;;;;;3930:25:18;;;;;;;;;;;;;;;;;-1:-1:-1;3930:25:18;;;:34;;;;;;;;;;;:50;:38;:50;:::i;4496:258::-;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;-1:-1:-1;;;;;4629:25:18;;;;;;;;;;;;;;;;;-1:-1:-1;4629:25:18;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2017:155::-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;788:96:15:-;867:10;788:96;:::o;7350:332:18:-;-1:-1:-1;;;;;7443:19:18;;7435:68;;;;-1:-1:-1;;;;;7435:68:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7521:21:18;;7513:68;;;;-1:-1:-1;;;;;7513:68:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7592:18:18;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7643:32;;;;;;;;;;;;;;;;;7350:332;;;:::o;5228:464::-;-1:-1:-1;;;;;5325:20:18;;5317:70;;;;-1:-1:-1;;;;;5317:70:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5405:23:18;;5397:71;;;;-1:-1:-1;;;;;5397:71:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5499:17:18;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5479:17:18;;;:9;:17;;;;;;;;;;;:91;;;;5603:20;;;;;;;:32;;5628:6;5603:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5580:20:18;;;:9;:20;;;;;;;;;;;;:55;;;;5650:35;;;;;;;5580:20;;5650:35;;;;;;;;;;;;;5228:464;;;:::o;1732:187:16:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;;;1837:29:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:16;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:16;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.7;\n// Copyright BigchainDB GmbH and Ocean Protocol contributors\n// SPDX-License-Identifier: (Apache-2.0 AND CC-BY-4.0)\n// Code is Apache-2.0 and docs are CC-BY-4.0\n\nimport 'openzeppelin-solidity/contracts/token/ERC20/ERC20.sol';\n\n/**\n* @title ERC20Pausable\n*  \n* @dev ERC20Pausable adds the ability to pause ERC20 compliant template \n*      used by the ERC20Template contract for pausing the contract.\n*/\ncontract ERC20Pausable is ERC20 {\n\n    bool internal paused = false;\n    \n    modifier onlyNotPaused() {\n        require(\n            !paused,\n            'ERC20Pausable: this token contract is paused' \n        );\n        _;\n    }\n\n    modifier onlyPaused() {\n        require(\n            paused,\n            'ERC20Pausable: this token contract is not paused' \n        );\n        _;\n    }\n\n    /**\n     * @dev transfer\n     *      Standard ERC20 transfer function with onlyNotPaused modifier.\n     *      Can be called only if the contract is not paused.\n     * @param to refers to an address that tokens are tranfered to.\n     * @param value refers to amount of tokens being tranfered.\n     * @return true if transfer is success, false otherwise.\n     */\n    function transfer(\n        address to, \n        uint256 value\n    ) \n        public \n        onlyNotPaused \n        returns (bool) \n    {\n        return super.transfer(to, value);\n    }\n\n    /**\n     * @dev transfer\n     *      Standard ERC20 transferFrom function with onlyNotPaused modifier.\n     *      Can be called only if the contract is not paused.\n     * @param from refers to an address that tokens are tranfered from.\n     * @param to refers to an address that tokens are tranfered to.\n     * @param value refers to amount of tokens being tranfered.\n     * @return true if transfer is success, false otherwise.\n     */\n    function transferFrom(\n        address from, \n        address to, \n        uint256 value\n    ) \n        public \n        onlyNotPaused \n        returns (bool) \n    {\n        return super.transferFrom(from, to, value);\n    }\n\n    /**\n     * @dev approve\n     *      Standard ERC20 approve function with onlyNotPaused modifier.\n     *      Can be called only if the contract is not paused.\n     * @param spender refers to an address that is allowed to spend tokens.\n     * @param value refers to amount of tokens that could be spent.\n     * @return true if approval is success, false otherwise.\n     */\n    function approve(\n        address spender, \n        uint256 value\n    ) \n        public \n        onlyNotPaused \n        returns (bool) \n    {\n        return super.approve(spender, value);\n    }\n\n    /**\n     * @dev increaseAllowance\n     *      Standard ERC20 increaseAllowance function with onlyNotPaused modifier.\n     *      Can be called only if the contract is not paused.\n     * @param spender refers to an address that is allowed to spend tokens.\n     * @param addedValue refers to an added amount of tokens that could be spent.\n     * @return true if allowance is increased successfully, false otherwise.\n     */\n    function increaseAllowance(\n        address spender, \n        uint256 addedValue\n    ) \n        public \n        onlyNotPaused \n        returns (bool) \n    {\n        return super.increaseAllowance(spender, addedValue);\n    }\n\n    /**\n     * @dev decreaseAllowance\n     *      Standard ERC20 decreaseAllowance function with onlyNotPaused modifier.\n     *      Can be called only if the contract is not paused.\n     * @param spender refers to an address that is allowed to spend tokens.\n     * @param subtractedValue refers to an subtracted amount of tokens that could be spent.\n     * @return true if allowance is decreased successfully, false otherwise.\n     */\n    function decreaseAllowance(\n        address spender, \n        uint256 subtractedValue\n    ) \n        public \n        onlyNotPaused \n        returns (bool) \n    {\n        return super.decreaseAllowance(spender, subtractedValue);\n    }\n}",
  "sourcePath": "/Users/ahmedali/Desktop/work/ocean-contracts/contracts/templates/token/ERC20Pausable.sol",
  "ast": {
    "absolutePath": "/Users/ahmedali/Desktop/work/ocean-contracts/contracts/templates/token/ERC20Pausable.sol",
    "exportedSymbols": {
      "ERC20Pausable": [
        5857
      ]
    },
    "id": 5858,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5738,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 5739,
        "nodeType": "ImportDirective",
        "scope": 5858,
        "sourceUnit": 6623,
        "src": "186:63:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5740,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6622,
              "src": "452:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$6622",
                "typeString": "contract ERC20"
              }
            },
            "id": 5741,
            "nodeType": "InheritanceSpecifier",
            "src": "452:5:13"
          }
        ],
        "contractDependencies": [
          5912,
          6622,
          6691
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Pausable\n \n@dev ERC20Pausable adds the ability to pause ERC20 compliant template \n     used by the ERC20Template contract for pausing the contract.",
        "fullyImplemented": true,
        "id": 5857,
        "linearizedBaseContracts": [
          5857,
          6622,
          6691,
          5912
        ],
        "name": "ERC20Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5744,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 5857,
            "src": "465:28:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 5742,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "465:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 5743,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "488:5:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5753,
              "nodeType": "Block",
              "src": "529:127:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "560:7:13",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 5747,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5744,
                          "src": "561:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305061757361626c653a207468697320746f6b656e20636f6e747261637420697320706175736564",
                        "id": 5749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:46:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fb16b191371962e589b652644b63a06e8f6a430fa845e70b633dfcb1ff7b995",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is paused\""
                        },
                        "value": "ERC20Pausable: this token contract is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fb16b191371962e589b652644b63a06e8f6a430fa845e70b633dfcb1ff7b995",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is paused\""
                        }
                      ],
                      "id": 5746,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6709,
                        6710
                      ],
                      "referencedDeclaration": 6710,
                      "src": "539:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:99:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5751,
                  "nodeType": "ExpressionStatement",
                  "src": "539:99:13"
                },
                {
                  "id": 5752,
                  "nodeType": "PlaceholderStatement",
                  "src": "648:1:13"
                }
              ]
            },
            "documentation": null,
            "id": 5754,
            "name": "onlyNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "526:2:13"
            },
            "src": "504:152:13",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5762,
              "nodeType": "Block",
              "src": "684:130:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5757,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5744,
                        "src": "715:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305061757361626c653a207468697320746f6b656e20636f6e7472616374206973206e6f7420706175736564",
                        "id": 5758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "735:50:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb0fcfc3a7bfa85cb8a315bfa155efd3d5807cfe89c9ab78a9f872e59895a2f8",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is not paused\""
                        },
                        "value": "ERC20Pausable: this token contract is not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb0fcfc3a7bfa85cb8a315bfa155efd3d5807cfe89c9ab78a9f872e59895a2f8",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is not paused\""
                        }
                      ],
                      "id": 5756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6709,
                        6710
                      ],
                      "referencedDeclaration": 6710,
                      "src": "694:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:102:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5760,
                  "nodeType": "ExpressionStatement",
                  "src": "694:102:13"
                },
                {
                  "id": 5761,
                  "nodeType": "PlaceholderStatement",
                  "src": "806:1:13"
                }
              ]
            },
            "documentation": null,
            "id": 5763,
            "name": "onlyPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:2:13"
            },
            "src": "662:152:13",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5780,
              "nodeType": "Block",
              "src": "1322:49:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5776,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5765,
                        "src": "1354:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5777,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5767,
                        "src": "1358:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5774,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "1339:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$5857",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 5775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6280,
                      "src": "1339:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 5778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5773,
                  "id": 5779,
                  "nodeType": "Return",
                  "src": "1332:32:13"
                }
              ]
            },
            "documentation": "@dev transfer\n     Standard ERC20 transfer function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param to refers to an address that tokens are tranfered to.\n@param value refers to amount of tokens being tranfered.\n@return true if transfer is success, false otherwise.",
            "id": 5781,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5770,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5769,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5754,
                  "src": "1279:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1279:13:13"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5765,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5781,
                  "src": "1213:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5767,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5781,
                  "src": "1234:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:50:13"
            },
            "returnParameters": {
              "id": 5773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5772,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5781,
                  "src": "1311:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5771,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1310:6:13"
            },
            "scope": 5857,
            "src": "1186:185:13",
            "stateMutability": "nonpayable",
            "superFunction": 6280,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5801,
              "nodeType": "Block",
              "src": "1982:59:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5796,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5783,
                        "src": "2018:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5797,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5785,
                        "src": "2024:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5798,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5787,
                        "src": "2028:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5794,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "1999:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$5857",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 5795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6351,
                      "src": "1999:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 5799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1999:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5793,
                  "id": 5800,
                  "nodeType": "Return",
                  "src": "1992:42:13"
                }
              ]
            },
            "documentation": "@dev transfer\n     Standard ERC20 transferFrom function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param from refers to an address that tokens are tranfered from.\n@param to refers to an address that tokens are tranfered to.\n@param value refers to amount of tokens being tranfered.\n@return true if transfer is success, false otherwise.",
            "id": 5802,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5790,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5789,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5754,
                  "src": "1939:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1939:13:13"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5783,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5802,
                  "src": "1850:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5785,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5802,
                  "src": "1873:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5787,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5802,
                  "src": "1894:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1894:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1840:73:13"
            },
            "returnParameters": {
              "id": 5793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5792,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5802,
                  "src": "1971:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5791,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1970:6:13"
            },
            "scope": 5857,
            "src": "1819:222:13",
            "stateMutability": "nonpayable",
            "superFunction": 6351,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5819,
              "nodeType": "Block",
              "src": "2563:53:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5815,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5804,
                        "src": "2594:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5816,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5806,
                        "src": "2603:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5813,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "2580:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$5857",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 5814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6315,
                      "src": "2580:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 5817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2580:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5812,
                  "id": 5818,
                  "nodeType": "Return",
                  "src": "2573:36:13"
                }
              ]
            },
            "documentation": "@dev approve\n     Standard ERC20 approve function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param spender refers to an address that is allowed to spend tokens.\n@param value refers to amount of tokens that could be spent.\n@return true if approval is success, false otherwise.",
            "id": 5820,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5809,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5808,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5754,
                  "src": "2520:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2520:13:13"
              }
            ],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5804,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5820,
                  "src": "2449:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5806,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5820,
                  "src": "2475:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2439:55:13"
            },
            "returnParameters": {
              "id": 5812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5811,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5820,
                  "src": "2552:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5810,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2551:6:13"
            },
            "scope": 5857,
            "src": "2423:193:13",
            "stateMutability": "nonpayable",
            "superFunction": 6315,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5837,
              "nodeType": "Block",
              "src": "3203:68:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5833,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5822,
                        "src": "3244:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5834,
                        "name": "addedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5824,
                        "src": "3253:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5831,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "3220:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$5857",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 5832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6378,
                      "src": "3220:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 5835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3220:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5830,
                  "id": 5836,
                  "nodeType": "Return",
                  "src": "3213:51:13"
                }
              ]
            },
            "documentation": "@dev increaseAllowance\n     Standard ERC20 increaseAllowance function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param spender refers to an address that is allowed to spend tokens.\n@param addedValue refers to an added amount of tokens that could be spent.\n@return true if allowance is increased successfully, false otherwise.",
            "id": 5838,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5827,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5826,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5754,
                  "src": "3160:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3160:13:13"
              }
            ],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5822,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5838,
                  "src": "3084:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3084:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5824,
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 5838,
                  "src": "3110:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3074:60:13"
            },
            "returnParameters": {
              "id": 5830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5829,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5838,
                  "src": "3192:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5828,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3191:6:13"
            },
            "scope": 5857,
            "src": "3048:223:13",
            "stateMutability": "nonpayable",
            "superFunction": 6378,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5855,
              "nodeType": "Block",
              "src": "3873:73:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5851,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5840,
                        "src": "3914:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5852,
                        "name": "subtractedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5842,
                        "src": "3923:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5849,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "3890:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$5857",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 5850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6406,
                      "src": "3890:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 5853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3890:49:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5848,
                  "id": 5854,
                  "nodeType": "Return",
                  "src": "3883:56:13"
                }
              ]
            },
            "documentation": "@dev decreaseAllowance\n     Standard ERC20 decreaseAllowance function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param spender refers to an address that is allowed to spend tokens.\n@param subtractedValue refers to an subtracted amount of tokens that could be spent.\n@return true if allowance is decreased successfully, false otherwise.",
            "id": 5856,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5845,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5844,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5754,
                  "src": "3830:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3830:13:13"
              }
            ],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5840,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5856,
                  "src": "3749:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3749:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5842,
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 5856,
                  "src": "3775:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3775:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3739:65:13"
            },
            "returnParameters": {
              "id": 5848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5847,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5856,
                  "src": "3862:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5846,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3862:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3861:6:13"
            },
            "scope": 5857,
            "src": "3713:233:13",
            "stateMutability": "nonpayable",
            "superFunction": 6406,
            "visibility": "public"
          }
        ],
        "scope": 5858,
        "src": "426:3522:13"
      }
    ],
    "src": "0:3948:13"
  },
  "legacyAST": {
    "absolutePath": "/Users/ahmedali/Desktop/work/ocean-contracts/contracts/templates/token/ERC20Pausable.sol",
    "exportedSymbols": {
      "ERC20Pausable": [
        5857
      ]
    },
    "id": 5858,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5738,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:13"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 5739,
        "nodeType": "ImportDirective",
        "scope": 5858,
        "sourceUnit": 6623,
        "src": "186:63:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5740,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6622,
              "src": "452:5:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$6622",
                "typeString": "contract ERC20"
              }
            },
            "id": 5741,
            "nodeType": "InheritanceSpecifier",
            "src": "452:5:13"
          }
        ],
        "contractDependencies": [
          5912,
          6622,
          6691
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Pausable\n \n@dev ERC20Pausable adds the ability to pause ERC20 compliant template \n     used by the ERC20Template contract for pausing the contract.",
        "fullyImplemented": true,
        "id": 5857,
        "linearizedBaseContracts": [
          5857,
          6622,
          6691,
          5912
        ],
        "name": "ERC20Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5744,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 5857,
            "src": "465:28:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 5742,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "465:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 5743,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "488:5:13",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5753,
              "nodeType": "Block",
              "src": "529:127:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "560:7:13",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 5747,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5744,
                          "src": "561:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305061757361626c653a207468697320746f6b656e20636f6e747261637420697320706175736564",
                        "id": 5749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:46:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fb16b191371962e589b652644b63a06e8f6a430fa845e70b633dfcb1ff7b995",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is paused\""
                        },
                        "value": "ERC20Pausable: this token contract is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fb16b191371962e589b652644b63a06e8f6a430fa845e70b633dfcb1ff7b995",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is paused\""
                        }
                      ],
                      "id": 5746,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6709,
                        6710
                      ],
                      "referencedDeclaration": 6710,
                      "src": "539:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "539:99:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5751,
                  "nodeType": "ExpressionStatement",
                  "src": "539:99:13"
                },
                {
                  "id": 5752,
                  "nodeType": "PlaceholderStatement",
                  "src": "648:1:13"
                }
              ]
            },
            "documentation": null,
            "id": 5754,
            "name": "onlyNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "526:2:13"
            },
            "src": "504:152:13",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5762,
              "nodeType": "Block",
              "src": "684:130:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5757,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5744,
                        "src": "715:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332305061757361626c653a207468697320746f6b656e20636f6e7472616374206973206e6f7420706175736564",
                        "id": 5758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "735:50:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb0fcfc3a7bfa85cb8a315bfa155efd3d5807cfe89c9ab78a9f872e59895a2f8",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is not paused\""
                        },
                        "value": "ERC20Pausable: this token contract is not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb0fcfc3a7bfa85cb8a315bfa155efd3d5807cfe89c9ab78a9f872e59895a2f8",
                          "typeString": "literal_string \"ERC20Pausable: this token contract is not paused\""
                        }
                      ],
                      "id": 5756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6709,
                        6710
                      ],
                      "referencedDeclaration": 6710,
                      "src": "694:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:102:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5760,
                  "nodeType": "ExpressionStatement",
                  "src": "694:102:13"
                },
                {
                  "id": 5761,
                  "nodeType": "PlaceholderStatement",
                  "src": "806:1:13"
                }
              ]
            },
            "documentation": null,
            "id": 5763,
            "name": "onlyPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:2:13"
            },
            "src": "662:152:13",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5780,
              "nodeType": "Block",
              "src": "1322:49:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5776,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5765,
                        "src": "1354:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5777,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5767,
                        "src": "1358:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5774,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "1339:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$5857",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 5775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6280,
                      "src": "1339:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 5778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5773,
                  "id": 5779,
                  "nodeType": "Return",
                  "src": "1332:32:13"
                }
              ]
            },
            "documentation": "@dev transfer\n     Standard ERC20 transfer function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param to refers to an address that tokens are tranfered to.\n@param value refers to amount of tokens being tranfered.\n@return true if transfer is success, false otherwise.",
            "id": 5781,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5770,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5769,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5754,
                  "src": "1279:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1279:13:13"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5765,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5781,
                  "src": "1213:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5767,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5781,
                  "src": "1234:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1234:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1203:50:13"
            },
            "returnParameters": {
              "id": 5773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5772,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5781,
                  "src": "1311:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5771,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1311:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1310:6:13"
            },
            "scope": 5857,
            "src": "1186:185:13",
            "stateMutability": "nonpayable",
            "superFunction": 6280,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5801,
              "nodeType": "Block",
              "src": "1982:59:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5796,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5783,
                        "src": "2018:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5797,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5785,
                        "src": "2024:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5798,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5787,
                        "src": "2028:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5794,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "1999:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$5857",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 5795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6351,
                      "src": "1999:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 5799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1999:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5793,
                  "id": 5800,
                  "nodeType": "Return",
                  "src": "1992:42:13"
                }
              ]
            },
            "documentation": "@dev transfer\n     Standard ERC20 transferFrom function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param from refers to an address that tokens are tranfered from.\n@param to refers to an address that tokens are tranfered to.\n@param value refers to amount of tokens being tranfered.\n@return true if transfer is success, false otherwise.",
            "id": 5802,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5790,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5789,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5754,
                  "src": "1939:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1939:13:13"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5783,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5802,
                  "src": "1850:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5785,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5802,
                  "src": "1873:10:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1873:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5787,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5802,
                  "src": "1894:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1894:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1840:73:13"
            },
            "returnParameters": {
              "id": 5793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5792,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5802,
                  "src": "1971:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5791,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1971:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1970:6:13"
            },
            "scope": 5857,
            "src": "1819:222:13",
            "stateMutability": "nonpayable",
            "superFunction": 6351,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5819,
              "nodeType": "Block",
              "src": "2563:53:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5815,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5804,
                        "src": "2594:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5816,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5806,
                        "src": "2603:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5813,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "2580:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$5857",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 5814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6315,
                      "src": "2580:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 5817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2580:29:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5812,
                  "id": 5818,
                  "nodeType": "Return",
                  "src": "2573:36:13"
                }
              ]
            },
            "documentation": "@dev approve\n     Standard ERC20 approve function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param spender refers to an address that is allowed to spend tokens.\n@param value refers to amount of tokens that could be spent.\n@return true if approval is success, false otherwise.",
            "id": 5820,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5809,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5808,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5754,
                  "src": "2520:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2520:13:13"
              }
            ],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5804,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5820,
                  "src": "2449:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5806,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5820,
                  "src": "2475:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2475:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2439:55:13"
            },
            "returnParameters": {
              "id": 5812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5811,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5820,
                  "src": "2552:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5810,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2551:6:13"
            },
            "scope": 5857,
            "src": "2423:193:13",
            "stateMutability": "nonpayable",
            "superFunction": 6315,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5837,
              "nodeType": "Block",
              "src": "3203:68:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5833,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5822,
                        "src": "3244:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5834,
                        "name": "addedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5824,
                        "src": "3253:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5831,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "3220:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$5857",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 5832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6378,
                      "src": "3220:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 5835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3220:44:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5830,
                  "id": 5836,
                  "nodeType": "Return",
                  "src": "3213:51:13"
                }
              ]
            },
            "documentation": "@dev increaseAllowance\n     Standard ERC20 increaseAllowance function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param spender refers to an address that is allowed to spend tokens.\n@param addedValue refers to an added amount of tokens that could be spent.\n@return true if allowance is increased successfully, false otherwise.",
            "id": 5838,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5827,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5826,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5754,
                  "src": "3160:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3160:13:13"
              }
            ],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5822,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5838,
                  "src": "3084:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3084:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5824,
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 5838,
                  "src": "3110:18:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3110:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3074:60:13"
            },
            "returnParameters": {
              "id": 5830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5829,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5838,
                  "src": "3192:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5828,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3191:6:13"
            },
            "scope": 5857,
            "src": "3048:223:13",
            "stateMutability": "nonpayable",
            "superFunction": 6378,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5855,
              "nodeType": "Block",
              "src": "3873:73:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5851,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5840,
                        "src": "3914:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5852,
                        "name": "subtractedValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5842,
                        "src": "3923:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5849,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6759,
                        "src": "3890:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20Pausable_$5857",
                          "typeString": "contract super ERC20Pausable"
                        }
                      },
                      "id": 5850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decreaseAllowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6406,
                      "src": "3890:23:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 5853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3890:49:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5848,
                  "id": 5854,
                  "nodeType": "Return",
                  "src": "3883:56:13"
                }
              ]
            },
            "documentation": "@dev decreaseAllowance\n     Standard ERC20 decreaseAllowance function with onlyNotPaused modifier.\n     Can be called only if the contract is not paused.\n@param spender refers to an address that is allowed to spend tokens.\n@param subtractedValue refers to an subtracted amount of tokens that could be spent.\n@return true if allowance is decreased successfully, false otherwise.",
            "id": 5856,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 5845,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5844,
                  "name": "onlyNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5754,
                  "src": "3830:13:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3830:13:13"
              }
            ],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5840,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 5856,
                  "src": "3749:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3749:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5842,
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 5856,
                  "src": "3775:23:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3775:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3739:65:13"
            },
            "returnParameters": {
              "id": 5848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5847,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5856,
                  "src": "3862:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5846,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3862:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3861:6:13"
            },
            "scope": 5857,
            "src": "3713:233:13",
            "stateMutability": "nonpayable",
            "superFunction": 6406,
            "visibility": "public"
          }
        ],
        "scope": 5858,
        "src": "426:3522:13"
      }
    ],
    "src": "0:3948:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.4",
  "updatedAt": "2020-09-23T08:45:11.872Z",
  "devdoc": {
    "details": "ERC20Pausable adds the ability to pause ERC20 compliant template      used by the ERC20Template contract for pausing the contract.",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "approve     Standard ERC20 approve function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "spender": "refers to an address that is allowed to spend tokens.",
          "value": "refers to amount of tokens that could be spent."
        },
        "return": "true if approval is success, false otherwise."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "decreaseAllowance     Standard ERC20 decreaseAllowance function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "spender": "refers to an address that is allowed to spend tokens.",
          "subtractedValue": "refers to an subtracted amount of tokens that could be spent."
        },
        "return": "true if allowance is decreased successfully, false otherwise."
      },
      "increaseAllowance(address,uint256)": {
        "details": "increaseAllowance     Standard ERC20 increaseAllowance function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "addedValue": "refers to an added amount of tokens that could be spent.",
          "spender": "refers to an address that is allowed to spend tokens."
        },
        "return": "true if allowance is increased successfully, false otherwise."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "transfer     Standard ERC20 transfer function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "to": "refers to an address that tokens are tranfered to.",
          "value": "refers to amount of tokens being tranfered."
        },
        "return": "true if transfer is success, false otherwise."
      },
      "transferFrom(address,address,uint256)": {
        "details": "transfer     Standard ERC20 transferFrom function with onlyNotPaused modifier.     Can be called only if the contract is not paused.",
        "params": {
          "from": "refers to an address that tokens are tranfered from.",
          "to": "refers to an address that tokens are tranfered to.",
          "value": "refers to amount of tokens being tranfered."
        },
        "return": "true if transfer is success, false otherwise."
      }
    },
    "title": "ERC20Pausable "
  },
  "userdoc": {
    "methods": {}
  }
}